<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-102</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slots = 3;
show_EQUIP = false;
for (i = 0; i &lt; slots; i++) {
    slot[i] = instance_create(0, 0, equip_slot);
    slot[i].image_speed = 0;
}
slot[0].slot[0, 0] = HELMET.null;
slot[0].slot[0, 1] = "HELMET";

slot[1].slot[0, 0] = CHEST.null;
slot[1].slot[0, 1] = "CHESTPIECE";

slot[2].slot[0, 0] = LEGGINGS.null;
slot[2].slot[0, 1] = "LEGGINGS";
//STATS
MAX_STATS = 5;
for (i = 0; i &lt; MAX_STATS; i++) {
    global.stats[i, 0] = 1;
}
global.stats[0, 1] = "Attack: ";
global.stats[1, 1] = "Defense: ";
global.stats[2, 1] = "Wisdom: ";
global.stats[3, 1] = "Vitality: ";
global.stats[4, 1] = "Dexteriy: ";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_EQUIP = ord("C");
if (keyboard_check_pressed(key_EQUIP)) {
    if (show_EQUIP = false) {show_EQUIP = true;}
    else if (show_EQUIP = true) {show_EQUIP = false;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var x1, x2, y1, y2;
x1 = view_xview[0]+(view_wview/4);
x2 = x1+(view_wview/3);
y1 = view_yview[0]+64;
y2 = y1 + 300;
if (show_EQUIP = true) {

    var val = 25;
    var col = make_color_rgb(val, val, val);
    draw_set_color(col);
    draw_rectangle(x1-1,y1-1,x2+1,y2+1,0);
    draw_set_color(c_dkgray);
    draw_rectangle(x1,y1,x2,y2,0);
    draw_set_alpha(1);
    draw_text_outline_transformed(x1 + 64, y1, 1.5, 1.5, NAME, 1, c_white);
    var n;
    for (n = 0; n &lt; slots; n += 1) 
    {
    
        var ix, iy;
        ix = x1+24;
        iy = y1 + 24+(n * 40);
        
        if (instance_exists(equip_slot)) {
            slot[n].x = ix;
            slot[n].y = iy;
        }
        
        //Drawing Border
        draw_set_color(col);
        draw_rectangle(ix-16,iy-16,ix+16,iy+16,0);
        draw_sprite(spr_border,0,ix,iy);
        val = 25;
        var col = make_color_rgb(val, val, val);
        draw_set_color(col);
        draw_rectangle(x1+48, y1+24, (x1+48)+75, (y1+24)+100,0);
        
        //Draw Stats
        val = 35;
        var col = make_color_rgb(val, val, val);
        draw_set_color(col);
        for (i = 0; i &lt; array_height_2d(global.stats); i++) {
            draw_text(x1+30, view_yview+192 + (i * 10), global.stats[i, 1] + string(global.stats[i, 0]));
        }
        drawStats(view_xview + (view_wview/4) + 32,(y2 - 70));
        
    }
}
//1/2 + 1/4
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
