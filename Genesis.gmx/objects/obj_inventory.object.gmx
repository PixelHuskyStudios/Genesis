<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Inventory Items
0 = SWORD
1 = HP POT
2 = MANA POT
3 = CASH
*/
startingValues();
globalvar showInv; //Display the inventory
showInv = true;
globalvar maxItems; //Total Item Slots (36)
maxItems = 15;

for (i = 0; i &lt; maxItems; i++) {
    
    global.inventory[i, 0] = -1;
    global.inventory[i, 1] = 0;
    button[i] = instance_create(0,0,obj_invbutton);
    button[i].slot = i;
    button[i].quantity = global.inventory[i,1];
}


globalvar invKey;
invKey = ord("I");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(invKey)) {
    if (showInv = true) {
        showInv = false;
    } else if (showInv = false) {
        showInv = true;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var x1, x2, y1, y2;
x1 = view_xview[0]+(view_wview/8*5);
x2 = x1+(view_wview/2);
y1 = view_yview[0]+256;
y2 = y1 + 200;
if (showInv = true) {

    draw_set_color(c_black);
    draw_set_alpha(0.8);
    draw_rectangle(x1,y1,x2,y2,0);
    draw_set_alpha(1);
    var n;
    for (n = 0; n &lt; maxItems; n += 1) 
    {
    
        var ix, iy;
        if (x1 + 24 + (n * 40) &lt; x2 - 57) {
            ix = x1+24+(n * 40);
            iy = y1 + 24;
        } else
        if (x1 + 24 + (n * 40) &gt; x2 - 57) {
            ix = x1-96+((n-4)*40);
            iy = y1+64;
        }
    if (instance_exists(obj_invbutton)) {
        button[n].x = ix;
        button[n].y = iy;
    }
        manageObjects();
        //Drawing Border
        draw_sprite(spr_border,0,ix,iy);
    }
}
draw_set_color(c_white);
draw_text(x1+4,y1+4,string(showInv));
//1/2 + 1/4
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
