<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.pref[0] = "Normal";
global.pref[1] = "TOPRIGHT";
DEBUG = false;
can_change = true;
hudpx = 14;
hudpy = 22;
hud = -1
globalvar key_INTERACT;
key_INTERACT = ord("E");
globalvar mouseItem;
mouseItem = -1;
if (!instance_exists(mouse_item)) {
    instance_create(x,y,mouse_item);
}
showHUD = true;
prntscrn = false
scID = 0;
var scrdir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm init
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_DEBUG = vk_f3;
key_Alternate = ord("J");
key_HUD = ord("H");
key_HUDS = ord("P");
key_RESET = ord("R");
key_SCREENSHOT = ord("L");
if (keyboard_check_pressed(key_DEBUG)) {
    if (DEBUG = true) {
        DEBUG = false;
    } else if (DEBUG = false) {
        DEBUG = true;
    }
}
if (DEBUG = true) {
    if (keyboard_check_pressed(key_Alternate)) {
    
            if (global.pref[0] = "Normal") global.pref[0] = "Alternate";
            } else if (global.pref[0] = "Alternate") {
                global.pref[0] = "Normal";
                obj_player.speed = 0;
            }
    if (keyboard_check_pressed(key_HUD)) {
        if (global.pref[1] = "TOPLEFT") {
            global.pref[1] = "TOPRIGHT";
        } else if(global.pref[1] = "TOPRIGHT") {
            global.pref[1] = "BOTTOMRIGHT";
        } else if(global.pref[1] = "BOTTOMRIGHT") {
            global.pref[1] = "BOTTOMLEFT";
        } else if(global.pref[1] = "BOTTOMLEFT") {
            global.pref[1] = "TOPLEFT";
        }
    }
    if (keyboard_check_pressed(key_RESET)) {
        with(obj_enemy) {
            instance_destroy();
        }
        with(o_exp) {
            instance_destroy();
        } 
        with(player_hands) {
            instance_destroy();
        }
        with(collision) {
            instance_destroy();
        }
        with(chest_parent) {
            instance_destroy();
        }
        with(obj_player) {
            instance_destroy();
        }
        with(obj_inventory) {
            instance_destroy();
        }
        with(obj_hud) {
            instance_destroy();
        }
        world_gen(room_width,room_height);
    }
}
if (keyboard_check_pressed(key_SCREENSHOT)) {
    if (!directory_exists("Screenshots")) {
        directory_create("Screenshots")
    }
    screen_save("Screenshots\screenshot.bmp");
    scID += 1;
    prntscrn = true;
    if (prntscrn = true) {
        draw_text_outline(view_xview[0]+48,view_yview[0]+800,"Screenshot Taken! screenshot.png", 1, c_white);
    }
    if (alarm[0] != -1) {
        alarm[0] = 60
    }
    if (alarm[0] = -1) {
        prntscrn = false;
    }
}
if (keyboard_check_pressed(key_HUDS)) {
    if (showHUD = true) {showHUD = false;}
    if (showHUD = false) {showHUD = true;}
}
if (global.pref[1] = "BOTTOMLEFT") {
    hudpx = view_xview[0]+14;
    hudpy = view_yview[0]+440;
    hud = 3;
} else if (global.pref[1] = "TOPLEFT") {
    hudpx = view_xview[0]+14;
    hudpy = view_yview[0]+16;
    hud = 0;
} else if (global.pref[1] = "TOPRIGHT") {
    hudpx = view_wview-50;
    hudpy = view_yview[0]+16;
    hud = 1
} else if (global.pref[1] = "BOTTOMRIGHT") {
    hudpx = view_wview-50;
    hudpy = view_yview[0]+440;
    hud = 2
}
/*
HUD POSITIONS:
TOP LEFT: x14 y22
TOP RIGHT: x278 y22
BOTTOM RIGHT: x278 y160
BOTTOM LEFT: x14 y160
*/

if (instance_number(obj_hud) &gt;= 2) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing options on side for debug
if (DEBUG = true) {
    //Movement Change
    debug_button(280,48,0);
    draw_set_color(c_white);
    draw_text(view_xview+285,view_yview+53,"PRESS J");
    
    //Draw HUD Change
    debug_button(280,88,0);
    draw_set_color(c_white);
    draw_text(view_xview+285,view_yview+101,"PRESS H! HUD:" + string(hud));
    draw_text(view_xview+100,view_yview+100,global.pref[0])
    draw_text(view_xview+100,view_yview+125,global.pref[1])
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing healthbars
if(instance_exists(obj_player)) {
var drHP = obj_player.HPPERCENT;
var drXP = obj_player.XPPERCENT;

//Drawing HP Bar
if (showHUD = true) {
    draw_set_color(c_black);
    draw_rectangle(hudpx,hudpy,hudpx+32,hudpy+10,0);
    draw_set_color(c_red);
    draw_rectangle(hudpx+2,hudpy+2,hudpx+(drHP/3.35),hudpy+8,0);
    draw_set_font(font0);
    draw_set_halign(fa_left);
    draw_text_outline(hudpx+36, hudpy, "Health: " + string(obj_player.HP) + "/" + string(obj_player.HP_MAX), 1, c_red);
    //34 pixels 2 margin leaves 30
    
    //Drawing XP Bar
    draw_set_color(c_black);
    draw_rectangle(hudpx,hudpy+10,hudpx+24, hudpy+20,0);
    draw_set_color(c_green);
    draw_rectangle(hudpx+2,hudpy+12,hudpx+2+(drXP/10), hudpy+18,0);
    draw_text_outline(hudpx+34, hudpy+12, "EXP: " + string(obj_player.XP) + "/" + string(obj_player.XP_MAX), 1, c_green);
    
    //Drawing Level
    draw_text_outline(hudpx,hudpy+22,"LEVEL: " + string(obj_player.LEVEL), 1, c_purple);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
